# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Scala CI

on:
  push:
    branches: [ "develop" ]
    tags: 
      - "[1-9]+.[1-9]+.[1-9]+"
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: read
  
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUBUSERNAME }}
  DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUBPASSWORD }}
  TERRAFORM_CLOUD_TOKEN: ${{ secrets.TERRAFORMCLOUDTOKEN }}
  DOCTL_VERSION: 1.93.1
  TERRAFORM_VERSION: 1.4.5
  DOCEAN_TOKEN: ${{ secrets.DIGITALOCEANTOKEN }}
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Cache sbt
      uses: actions/cache@v2
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache/v1
          ~/.cache/coursier/v1
          ~/AppData/Local/Coursier/Cache/v1
          ~/Library/Caches/Coursier/v1
        key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}-${{ hashFiles('project/dependencies.scala') }}
        restore-keys: |
          ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}-${{ hashFiles('project/dependencies.scala') }}
          ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
          ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}
          ${{ runner.os }}-sbt-cache-v2
    - name: Run tests
      run: sbt test
  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - name: Docker Login
      run: docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
    - name: Cache sbt
      uses: actions/cache@v2
      with:
        path: |
          ~/.sbt
          ~/.ivy2/cache
          ~/.coursier/cache/v1
          ~/.cache/coursier/v1
          ~/AppData/Local/Coursier/Cache/v1
          ~/Library/Caches/Coursier/v1
        key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}-${{ hashFiles('project/dependencies.scala') }}
        restore-keys: |
          ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}-${{ hashFiles('project/dependencies.scala') }}
          ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}
          ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}
          ${{ runner.os }}-sbt-cache-v2
    - name: Publish 
      run: sbt Docker/publish
  deploy:
    runs-on: ubuntu-latest
    needs: publish
    if: startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/checkout@v3
    - name: write terraform creds
      run: echo "credentials \"app.terraform.io\" { token = \"$TERRAFORM_CLOUD_TOKEN\" }" > ~/.terraformrc
    - name: Install utils
      run: sudo apt-get update && sudo apt-get install -y curl wget git jq unzip apache2-utils
    - name: Install doctl
      run: |
        curl -L https://github.com/digitalocean/doctl/releases/download/v${DOCTL_VERSION}/doctl-${DOCTL_VERSION}-linux-amd64.tar.gz | tar xz -C /tmp\
        && sudo mv /tmp/doctl /usr/local/bin
    - name: Install terraform
      run: |
        wget https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip -O /tmp/terraform.zip\
        && cd /tmp\
        && unzip terraform.zip\
        && sudo mv terraform /usr/local/bin
    - name: Write credentials for digital ocean
      run: |
        doctl auth init -t $DOCEAN_TOKEN\
        && doctl kubernetes cluster config save $(doctl kubernetes cluster list | tail -n+2 | head | cut -d ' ' -f1)
    - name: Deploy
      run: |
        cd deployment/digital-ocean\
        && terraform init\
        && terraform apply -auto-approve
        command: |
          cd deployment/digital-ocean\
          && terraform init\
          && terraform apply -auto-approve
